html
  head
    title ESE-At-A-Glance
    link(rel="stylesheet", href="../../css/output.css")
    script(src="https://kit.fontawesome.com/a0bcd08329.js" crossorigin="anonymous")
    link(rel="icon", href="/assets/favicon.png")
  body.bg-neutral.min-h-screen(class="max-w-[2200px]").m-auto
    include partials/_nav.pug
    form(method='POST' action='/student/editStudent/'+data.ID).bg-error.text-accent.pb-8
      - const keys = Object.keys(data)
        section.pl-4.pb-16.pt-8.pr-0.grid.gap-2.grid-cols-8
          for key in keys 
            if key == 'history'
                h1.col-span-3.text-lg.text-xl= key.toUpperCase()
                section.grid.gap-8.col-span-7.col-start-1(class="md:grid-cols-2 lg:grid-cols-3 h-full")
                  for history in data[key]
                      each goal in Object.values(history)
                        section.bg-base-100.p-4
                          label Grade:
                          select.text-accent.text-center(name="goalGrade")
                            option(value=goal.grade)= goal.grade
                            option(value=0) Kindergarten 
                            option(value=1) 1st Grade 
                            option(value=2) 2nd Grade 
                            option(value=3) 3rd Grade 
                            option(value=4) 4th Grade 
                            option(value=5) 5th Grade 
                            option(value=6) 6th Grade 
                            option(value=7) 7th Grade 
                            option(value=8) 8th Grade 
                            option(value=9) 9th Grade 
                            option(value=10) 10th Grade 
                            option(value=11) 11th Grade 
                            option(value=12) 12th Grade 
                            option(value=13) Other 
                          section.grid.grid-cols-2.gap-2.p-4
                            label Goal ID 
                            input( readonly class="col-span-4" value= goal._id)
                            label Domain:
                            select(class="col-span-4" name="domain")
                              if goal.domain==='curriculum'
                                option(value="curriculum" selected) Curriculum and Learning Environment
                                option(value="socialEmotional") Social/Emotional
                                option(value="independentFunctioning") Independent Functioning
                                option(value="healthcare") Healthcare
                                option(value="communication") Communication
                              else if goal.domain==='socialEmotional'
                                option(value="curriculum") Curriculum and Learning Environment
                                option(value="socialEmotional" selected) Social/Emotional
                                option(value="independentFunctioning") Independent Functioning
                                option(value="healthcare") Healthcare
                                option(value="communication") Communication
                              else if goal.domain==='independentFunctioning'
                                option(value="curriculum") Curriculum and Learning Environment
                                option(value="socialEmotional") Social/Emotional
                                option(value="independentFunctioning" selected) Independent Functioning
                                option(value="healthcare") Healthcare
                                option(value="communication") Communication
                              else if goal.domain==='healthcare'
                                option(value="curriculum") Curriculum and Learning Environment
                                option(value="socialEmotional") Social/Emotional
                                option(value="independentFunctioning") Independent Functioning
                                option(value="healthcare" selected) Healthcare
                                option(value="communication") Communication
                              else if goal.domain==='communication'
                                option(value="curriculum") Curriculum and Learning Environment
                                option(value="socialEmotional") Social/Emotional
                                option(value="independentFunctioning") Independent Functioning
                                option(value="healthcare") Healthcare
                                option(value="communication" selected) Communication
                              else 
                                option(value="null" selected) Error
                                option(value="curriculum") Curriculum and Learning Environment
                                option(value="socialEmotional") Social/Emotional
                                option(value="independentFunctioning") Independent Functioning
                                option(value="healthcare") Healthcare
                                option(value="communication" selected) Communication
                            label Text
                            textarea(class="col-span-4" rows='5' name="text")= goal.text
                            label Attained
                            if value=goal.succeed
                              input(name="attained" type='checkbox' disabled checked)
                              input(name='attained' id='attained' hidden value='on')
                            else
                              input(name="attained" type='checkbox' disabled )
                              input(name='attained' id='attained' hidden value='off')

            if key === 'presentationList'
              h1.col-span-3.text-lg(class='md:text-xl lg:text-2xl').relative.underline.font-bolder= key.toUpperCase()
              section.col-span-6.grid.gap-4.text-left(class='md:grid-cols-2 lg:grid-cols-3')
                for accomm in data[key]
                  div.grid.grid-cols-6.gap-4
                    label(class='col-span-5 block')= accomm
            if key === 'responseList'
              h1.col-span-3.text-lg(class='md:text-xl lg:text-2xl').underline.font-bolder.text-lg= key.toUpperCase()
              section.col-span-6.grid.gap-4.text-left(class='md:grid-cols-2 lg:grid-cols-3')
                for accomm in data[key]
                  div.grid.grid-cols-6.gap-4
                    label(class='col-span-5')= accomm
            if key === 'settingList'
              h1.col-span-3.text-lg(class='md:text-xl lg:text-2xl').underline.font-bolder.text-lg= key.toUpperCase()
              section.col-span-6.grid.gap-4.text-left(class='md:grid-cols-2 lg:grid-cols-3')
                for accomm in data[key]
                  div.grid.grid-cols-6.gap-4
                    label(class='col-span-5')= accomm
            if key === 'schedulingList'
              h1.col-span-3.text-lg(class='md:text-xl lg:text-2xl').underline.font-bolder.text-lg= key.toUpperCase()
              section.col-span-6.grid.gap-4.text-left(class='md:grid-cols-2 lg:grid-cols-3')
                for accomm in data[key]
                  div.grid.grid-cols-6.gap-4
                    label(class='col-span-5')= accomm
            else if key==='_id' || key==='image'
              input.col-span-6.px-2(name= key hidden value=data[key])
            else if key != 'presentationList' && key != 'responseList' && key !='settingList' && key !='schedulingList' && key!='history'
                    h1.col-span-3.text-lg(class='md:text-xl lg:text-2xl').underline.font-bolder.text-lg= key.toUpperCase()
                    input.col-span-6.px-2(name= key value=data[key])
        section 
          a(href='/student/addAccommodations/'+ data.ID)
            span.block.bg-white.rounded.text-center.border-4.border-success(class='ml-4 w-32 mb-12') Toggle Accoms
            
      input(type='submit' class='btn rounded w-64 ml-4 bg-success' value='Confirm Changes')